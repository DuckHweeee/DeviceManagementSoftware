// <auto-generated />
using System;
using DeviceManagementSoftware.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DeviceManagementSoftware.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DeviceManagementSoftware.Models.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateOfEntry")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("DeviceManagementSoftware.Models.DeviceCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("DeviceCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2025, 7, 19, 8, 34, 1, 38, DateTimeKind.Local).AddTicks(4463),
                            Description = "Desktop computers and laptops",
                            Name = "Computer"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2025, 7, 19, 8, 34, 1, 38, DateTimeKind.Local).AddTicks(4466),
                            Description = "Printing devices",
                            Name = "Printer"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2025, 7, 19, 8, 34, 1, 38, DateTimeKind.Local).AddTicks(4468),
                            Description = "Mobile phones and desk phones",
                            Name = "Phone"
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(2025, 7, 19, 8, 34, 1, 38, DateTimeKind.Local).AddTicks(4470),
                            Description = "Display monitors",
                            Name = "Monitor"
                        },
                        new
                        {
                            Id = 5,
                            DateCreated = new DateTime(2025, 7, 19, 8, 34, 1, 38, DateTimeKind.Local).AddTicks(4471),
                            Description = "Routers, switches, and network devices",
                            Name = "Network Equipment"
                        });
                });

            modelBuilder.Entity("DeviceManagementSoftware.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Position")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2025, 7, 19, 8, 34, 1, 38, DateTimeKind.Local).AddTicks(4627),
                            Department = "IT",
                            Email = "john.smith@company.com",
                            FullName = "John Smith",
                            IsActive = true,
                            PhoneNumber = "123-456-7890",
                            Position = "System Administrator"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2025, 7, 19, 8, 34, 1, 38, DateTimeKind.Local).AddTicks(4630),
                            Department = "HR",
                            Email = "sarah.johnson@company.com",
                            FullName = "Sarah Johnson",
                            IsActive = true,
                            PhoneNumber = "123-456-7891",
                            Position = "HR Manager"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2025, 7, 19, 8, 34, 1, 38, DateTimeKind.Local).AddTicks(4632),
                            Department = "Finance",
                            Email = "mike.brown@company.com",
                            FullName = "Mike Brown",
                            IsActive = true,
                            PhoneNumber = "123-456-7892",
                            Position = "Financial Analyst"
                        });
                });

            modelBuilder.Entity("DeviceManagementSoftware.Models.UserDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("UserId");

                    b.ToTable("UserDevices");
                });

            modelBuilder.Entity("DeviceManagementSoftware.Models.Device", b =>
                {
                    b.HasOne("DeviceManagementSoftware.Models.DeviceCategory", "Category")
                        .WithMany("Devices")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DeviceManagementSoftware.Models.UserDevice", b =>
                {
                    b.HasOne("DeviceManagementSoftware.Models.Device", "Device")
                        .WithMany("UserDevices")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DeviceManagementSoftware.Models.User", "User")
                        .WithMany("UserDevices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DeviceManagementSoftware.Models.Device", b =>
                {
                    b.Navigation("UserDevices");
                });

            modelBuilder.Entity("DeviceManagementSoftware.Models.DeviceCategory", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("DeviceManagementSoftware.Models.User", b =>
                {
                    b.Navigation("UserDevices");
                });
#pragma warning restore 612, 618
        }
    }
}
